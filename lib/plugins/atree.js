//@ sourceMappingURL=atree.map
// Generated by CoffeeScript 1.6.1
(function() {
  var wongo, _;

  _ = require('underscore');

  wongo = require(__dirname + '/../wongo');

  module.exports = function(schema, options) {
    if (options == null) {
      options = {};
    }
    schema.fields.ancestors = [
      {
        type: String,
        required: true
      }
    ];
    schema.fields.parent = {
      type: String
    };
    schema.indexes.push({
      ancestors: 1
    });
    schema.indexes.push({
      parent: 1
    });
    schema.middleware.beforeValidate.push(function(document, schema, callback) {
      var ancestor, _i, _len, _ref, _ref1;
      if ((_ref = document.ancestors) == null) {
        document.ancestors = [];
      }
      _ref1 = document.ancestors;
      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
        ancestor = _ref1[_i];
        if (_.isNull(ancestor)) {
          return callback('Can not have a null ancestor.');
        }
      }
      document.parent = _.last(document.ancestors);
      return callback();
    });
    return schema.middleware.afterRemove.push(function(document, schema, callback) {
      var query;
      query = {
        ancestors: document._id
      };
      return wongo.find(schema._type, query, function(err, result) {
        if (err) {
          return callback(err);
        }
        if (_.isEmpty(result)) {
          return callback(err);
        }
        return wongo.remove(schema._type, result, function(err) {
          return callback(err);
        });
      });
    });
  };

}).call(this);
