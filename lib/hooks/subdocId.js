//@ sourceMappingURL=subdocId.map
// Generated by CoffeeScript 1.6.1
(function() {
  var ObjectID, mongodb, _,
    __hasProp = {}.hasOwnProperty;

  _ = require('underscore');

  mongodb = require('mongodb');

  ObjectID = mongodb.ObjectID;

  module.exports = function(document, schema, callback) {
    var generateSubdocIds;
    generateSubdocIds = function(document, fields) {
      var item, meta, prop, val, _base, _ref, _results;
      _results = [];
      for (prop in document) {
        if (!__hasProp.call(document, prop)) continue;
        val = document[prop];
        if (prop === '_id') {
          continue;
        }
        if (_.isUndefined(val) || _.isEmpty(val) || _.isNull(val)) {
          continue;
        }
        meta = fields[prop];
        if (_.isUndefined(meta)) {
          continue;
        }
        if (_.isArray(meta)) {
          if (meta[0].type === 'SubDoc') {
            _results.push((function() {
              var _base, _i, _len, _ref, _ref1, _results1;
              _ref = document[prop] || [];
              _results1 = [];
              for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                item = _ref[_i];
                if ((_ref1 = (_base = document[prop])._id) == null) {
                  _base._id = ObjectID();
                }
                _results1.push(generateSubdocIds(item, meta[0]));
              }
              return _results1;
            })());
          } else {
            _results.push(void 0);
          }
        } else if (meta.type === 'SubDoc') {
          if ((_ref = (_base = document[prop])._id) == null) {
            _base._id = ObjectID();
          }
          _results.push(generateSubdocIds(document[prop], meta));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };
    generateSubdocIds(document, schema.fields);
    return callback();
  };

}).call(this);
